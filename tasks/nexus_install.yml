---
- name: Download nexus_package
  get_url:
    url: "http://download.sonatype.com/nexus/3/{{ nexus_package }}"
    dest: "{{ nexus_download_dir }}/{{ nexus_package }}"
    force: no
  notify:
    - nexus-service-stop

- name: Ensure Nexus installation directory exists
  file:
    path: "{{ nexus_installation_dir }}"
    state: "directory"

- name: Unpack Nexus download
  unarchive:
    src: "{{ nexus_download_dir }}/{{ nexus_package }}"
    dest: "{{ nexus_installation_dir }}"
    creates: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}"
    force: no
    copy: false
  notify:
    - nexus-service-stop

- meta: flush_handlers

- name: Update symlink nexus-latest
  file:
    path: "{{ nexus_installation_dir }}/nexus-latest"
    src: "{{ nexus_installation_dir }}/nexus-{{ nexus_version }}"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    state: link
  register: nexus_latest_version

- name: Delete unpacked data directory
  file:
    path: "{{ nexus_installation_dir }}/nexus-latest/data"
    state: absent

- name: Get path to default settings
  set_fact:
    nexus_default_settings_file: "{{ nexus_installation_dir }}/nexus-latest/etc/org.sonatype.nexus.cfg"
  when: nexus_version is version_compare('3.1.0', '<')

- name: Get path to default settings
  set_fact:
    nexus_default_settings_file: "{{ nexus_installation_dir }}/nexus-latest/etc/nexus-default.properties"
  when: nexus_version is version_compare('3.1.0', '>=')

- name: Get application settings directories
  set_fact:
    nexus_app_dir_settings_dirs:
      - "{{ nexus_installation_dir }}/nexus-latest/etc"
  when: nexus_version is version_compare('3.1.0', '<')

- name: Get application settings directories
  set_fact:
    nexus_app_dir_settings_dirs:
      - "{{ nexus_installation_dir }}/nexus-latest/etc"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/karaf"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/jetty"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/fabric"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/logback"
      - "{{ nexus_installation_dir }}/nexus-latest/etc/scripts"
  when: nexus_version is version_compare('3.1.0', '>=')

- name: Allow nexus to create first-time install configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: "0755"
    recurse: false
  with_items: "{{ nexus_app_dir_settings_dirs }}"
  when: nexus_latest_version.changed
  register: chown_config_first_time
  tags:
    # hard to run as a handler for time being
    - skip_ansible_lint

- name: Setup Nexus data directory
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp: "^-Dkaraf.data=.*"
    line: "-Dkaraf.data={{ nexus_data_dir }}"

- name: Setup JVM logfile directory
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp: "^-XX:LogFile=.*"
    line: "-XX:LogFile={{ nexus_data_dir }}/log/jvm.log"

- name: Setup Nexus default timezone
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp: "^-Duser.timezone=.*"
    line: "-Duser.timezone={{ nexus_timezone }}"

- name: Create Nexus tmp/backup directory
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
  with_items:
    - "{{ nexus_tmp_dir }}"
    - "{{ nexus_backup_dir }}"

- name: Setup Nexus tmp directory
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions"
    regexp: "^-Djava.io.tmpdir=.*"
    line: "-Djava.io.tmpdir={{ nexus_tmp_dir }}"

- name: Set NEXUS_HOME for the service user
  lineinfile:
    dest: "/home/{{ nexus_os_user }}/.bashrc"
    regexp: "^export NEXUS_HOME=.*"
    line: "export NEXUS_HOME={{ nexus_installation_dir }}/nexus-latest"

- name: Set nexus user
  lineinfile:
    dest: "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.rc"
    regexp: ".*run_as_user=.*"
    line: "run_as_user=\"{{ nexus_os_user }}\""

- name: Set nexus port
  lineinfile:
    dest: "{{ nexus_default_settings_file }}"
    regexp: "^application-port=.*"
    line: "application-port={{ nexus_default_port }}"

- name: Set nexus context path
  lineinfile:
    dest: "{{ nexus_default_settings_file }}"
    regexp: "^nexus-context-path=.*"
    line: "nexus-context-path={{ nexus_default_context_path }}"

- name: Bind nexus service to 127.0.0.1 only
  lineinfile:
    dest: "{{ nexus_default_settings_file }}"
    regexp: "^application-host=.*"
    line: "application-host=127.0.0.1"
  when: httpd_setup_enable

- name: Create systemd service configuration
  template:
    src: "nexus.service"
    dest: "/etc/systemd/system"
  notify:
    - systemd-reload

- block:
    - name: "Deploy backup restore script"
      template:
        src: "nexus-blob-restore.sh.j2"
        dest: "{{ nexus_script_dir }}/nexus-blob-restore.sh"
        mode: 0755
    - name: "Symlink backup restore script to /sbin"
      file:
        src: "{{ nexus_script_dir }}/nexus-blob-restore.sh"
        dest: "/sbin/nexus-blob-restore.sh"
        state: link
  when: nexus_backup_configure | bool

- name: Clean cache for upgrade process
  file:
    path: "{{ nexus_data_dir }}/clean_cache"
    state: touch
  when: nexus_latest_version.changed and nexus_data_dir_contents.stdout != ""
  tags:
    # hard to run as a handler for time being
    - skip_ansible_lint

- meta: flush_handlers

- name: Enable nexus service and make sure it is started
  systemd:
    name: nexus.service
    enabled: yes
    state: started
  notify:
    - wait-for-nexus
    - wait-for-nexus-port

- meta: flush_handlers

- name: Chown configuration files from {{ nexus_installation_dir }}/nexus-latest/etc back to root
  file:
    path: "{{ nexus_installation_dir }}/nexus-latest/etc"
    owner: "root"
    group: "root"
    mode: a=rX,u+w
    recurse: true
  when: chown_config_first_time.changed
  tags:
    # hard to run as a handler for time being
    - skip_ansible_lint

- name: Prevent nexus to create any new configuration files in  {{ nexus_installation_dir }}/nexus-latest/etc
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
    recurse: false
  with_items: "{{ nexus_app_dir_settings_dirs }}"
